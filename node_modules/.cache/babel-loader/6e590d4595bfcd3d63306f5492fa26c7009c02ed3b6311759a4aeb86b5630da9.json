{"ast":null,"code":"import{useContext}from'react';import{LOCAL_STORAGE_THEME_KEY,Theme,ThemeContext}from'./ThemeContext';export function useTheme(){var _useContext=useContext(ThemeContext),theme=_useContext.theme,setTheme=_useContext.setTheme;var toggleTheme=function toggleTheme(){var newTheme=theme===Theme.LIGHT?Theme.DARK:Theme.LIGHT;setTheme&&setTheme(newTheme);localStorage.setItem(LOCAL_STORAGE_THEME_KEY,newTheme);};return{theme:theme,toggleTheme:toggleTheme};}","map":{"version":3,"names":["useContext","LOCAL_STORAGE_THEME_KEY","Theme","ThemeContext","useTheme","_useContext","theme","setTheme","toggleTheme","newTheme","LIGHT","DARK","localStorage","setItem"],"sources":["/Users/dianamansurova/Desktop/работа/memesis/src/app/providers/ThemeProvider/lib/useTheme.ts"],"sourcesContent":["import { useContext } from 'react';\nimport { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from './ThemeContext';\n\ninterface UseThemeResult {\n  theme?: Theme;\n  toggleTheme: () => void;\n}\n\nexport function useTheme(): UseThemeResult {\n  const { theme, setTheme } = useContext(ThemeContext);\n  const toggleTheme = () => {\n    const newTheme = theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT;\n    setTheme && setTheme(newTheme);\n    localStorage.setItem(LOCAL_STORAGE_THEME_KEY, newTheme);\n  };\n  return { theme, toggleTheme };\n}\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,uBAAuB,CAAEC,KAAK,CAAEC,YAAY,KAAQ,gBAAgB,CAO7E,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAmB,CACzC,IAAAC,WAAA,CAA4BL,UAAU,CAACG,YAAY,CAAC,CAA5CG,KAAK,CAAAD,WAAA,CAALC,KAAK,CAAEC,QAAQ,CAAAF,WAAA,CAARE,QAAQ,CACvB,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAM,CAAAC,QAAQ,CAAGH,KAAK,GAAKJ,KAAK,CAACQ,KAAK,CAAGR,KAAK,CAACS,IAAI,CAAGT,KAAK,CAACQ,KAAK,CACjEH,QAAQ,EAAIA,QAAQ,CAACE,QAAQ,CAAC,CAC9BG,YAAY,CAACC,OAAO,CAACZ,uBAAuB,CAAEQ,QAAQ,CAAC,CACzD,CAAC,CACD,MAAO,CAAEH,KAAK,CAALA,KAAK,CAAEE,WAAW,CAAXA,WAAY,CAAC,CAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}